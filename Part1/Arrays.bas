Option Base 0 'індексація масивів з нуля
Dim A(3) As Byte 'масив A коротких цілих розміром 4
Dim b(1 To 2) As Double 'масив B дійсних розміром 2
Dim c(1 To 2, 1 To 2) As Integer 'масив C цілих розміром 2х2
Dim d() As Boolean 'динамічний масив D логічних
Dim E As Variant 'змінна або масив E типу Variant

'підпрограма main
Public Sub main()
A(0) = 7 'присвоїти елементу масиву A з індексом 0 число 7
A(1) = 9 '-//- 1 число 9
A(2) = 2 '-//- 2 число 2
Debug.Print "A()="; A(0); A(1); A(2) 'вивести A
b(1) = 3.56 'заповнити масив B
b(2) = 5.78
Debug.Print "B()="; b(1); b(2) 'вивести B
c(1, 1) = 5 'присвоїти елементу масиву C з індексами 1,1 число 5
c(1, 2) = 10 '(рядок 1, стовпчик 2) число 10
c(2, 1) = 20
c(2, 2) = 15
Debug.Print "C()="; c(1, 1); c(1, 2) 'вивести C
Debug.Print "    "; c(2, 1); c(2, 2)
ReDim d(1 To 2) 'змінити розмір динамічного масиву D
d(1) = 1 'заповнити масив D
d(2) = 0
Erase d 'вивільнити пам'ять для динамічного масиву D
ReDim d(1 To 2, 1 To 2) 'змінити розмір динамічного масиву D
d(1, 1) = 1 'заповнити масив D
d(1, 2) = 1
d(2, 1) = 0
d(2, 2) = 0
Debug.Print "D()="
'вкладені цикли для виведення масиву D
For i = LBound(d, 1) To UBound(d, 1) 'від першого рядка до останнього
    For j = LBound(d, 2) To UBound(d, 2) 'від першого стовпчика до останнього
        Debug.Print d(i, j); " "; 'вивести значення елемента D(i, j)
    Next j 'наступний стовпчик
    Debug.Print
Next i 'наступний рядок
E = Array(2, 1, 5, 6, 0) 'заповнити варіантний масив E
'Debug.Print 'перейти на наступний рядок
Debug.Assert IsArray(E)  'якщо E не є масивом, призупинити виконання програми
Debug.Print "E()="; E(0); E(1); E(2); E(3); E(4) 'вивести E
End Sub 'кінець підпрограми main
